input {
    file {
        path => "/projets/datasets/accidents/logstash/files/usagers_*.csv"
        sincedb_path => "/dev/null"
        type => "usager"
        start_position => "beginning"
    }

    file {
        path => "/projets/datasets/accidents/logstash/files/caracteristiques_*.csv"
        sincedb_path => "/dev/null"
        type => "caracteristique"
        start_position => "beginning"
    }
}

filter {
  if [type] == "usager" {
    csv {
      id => "usager"
      columns => [ "Num_Acc","place","catu","grav","sexe","trajet","secu","locp","actp","etatp","an_nais","num_veh" ]
      remove_field => [ "message" ]
    }

    translate {
      dictionary => {
        "1"         => "homme"
        "2"         => "femme"
      }
      field => "sexe"
      destination => "sexe"
      override => true
    }

    translate {
      dictionary => {
        "1"         => "Conducteur"
        "2"         => "Passager"
        "3"         => "Piéton"
        "4"         => "Piéton en roller ou en trottinette"
      }
      field => "catu"
      destination => "catu"
      override => true
    }

    translate {
      dictionary => {
        "1"         => "Indemne"
        "2"         => "Tué"
        "3"         => "Blessé hospitalisé"
        "4"         => "Blessé léger"
      }
      field => "grav"
      destination => "grav"
      override => true
    }

    translate {
      dictionary => {
        "1" => "Domicile – travail" 
        "2" => "Domicile – école" 
        "3" => "Courses – achats" 
        "4" => "Utilisation professionnelle" 
        "5" => "Promenade – loisirs"
        "9" => "Autre" 
      }
      field => "trajet"
      destination => "trajet"
      override => true
    }

    mutate {
      convert => { "place" => "integer" }
      convert => { "secu" => "integer" }
      convert => { "locp" => "integer" }
      convert => { "actp" => "integer" }
      convert => { "etatp" => "integer" }
      convert => { "an_nais" => "integer" }
    }

    mutate {
      rename => { "place" => "[user][place]" }
      rename => { "catu" => "[user][catu]" }
      rename => { "grav" => "[user][grav]" }
      rename => { "sexe" => "[user][sexe]" }
      rename => { "trajet" => "[user][trajet]" }
      rename => { "secu" => "[user][secu]" }
      rename => { "locp" => "[user][locp]" }
      rename => { "actp" => "[user][actp]" }
      rename => { "etatp" => "[user][etatp]" }
      rename => { "an_nais" => "[user][an_nais]" }
      rename => { "num_veh" => "[user][num_veh]" }
    }

    aggregate {
      task_id => "%{Num_Acc}"
      code => "
        map['Num_Acc'] = event.get('Num_Acc')
        map['usagers'] ||= []
        map['usagers'] << event.get('user')
        event.cancel()
      "
      push_map_as_event_on_timeout => true
      timeout_task_id_field => "Num_Acc"
      timeout => 5
      inactivity_timeout => 1
      timeout_tags => ["_aggregatetimeout"]
    }

    mutate {
      remove_field => ["@timestamp"]
    }
    
  } else if [type] == "caracteristique" {
    csv {
      id => "caracteristique"
      columns => [ "Num_Acc","an","mois","jour","hrmn","lum","agg","int","atm","col","com","adr","gps","lat","long","dep" ]
      remove_field => [ "message" ]      
    }    

    translate {
      dictionary => {
        "1" => "Plein jour" 
        "2" => "Crépuscule ou aube" 
        "3" => "Nuit sans éclairage public" 
        "4" => "Nuit avec éclairage public non allumé" 
        "5" => "Nuit avec éclairage public allumé"         
      }
      field => "lum"
      destination => "lum"
      override => true      
    }

    translate {
      dictionary => {
        "1" => "Hors agglomération" 
        "2" => "En agglomération" 
      }
      field => "agg"
      destination => "agg"
      override => true      
    }

    translate {
      dictionary => {
        "1" => "Normale" 
        "2" => "Pluie légère" 
        "3" => "Pluie forte" 
        "4" => "Neige - grêle" 
        "5" => "Brouillard - fumée" 
        "6" => "Vent fort - tempête" 
        "7" => "Temps éblouissant" 
        "8" => "Temps couvert" 
        "9" => "Autre"
      }
      field => "atm"
      destination => "atm"
      override => true      
    }

    translate {
      dictionary => {
        "1" => "Deux véhicules - frontale" 
        "2" => "Deux véhicules - par l’arrière" 
        "3" => "Deux véhicules - par le coté" 
        "4" => "Trois véhicules et plus - en chaîne" 
        "5" => "Trois véhicules et plus  - collisions multiples"
        "6" => "Autre collision" 
        "7" => "Sans collision"
      }
      field => "col"
      destination => "col"
      override => true      
    }

    if [hrmn] =~ /^\d{3}$/ {
      mutate {
        replace => {
          "hrmn" => "0%{hrmn}"
        }
      }
    } else if [hrmn] =~ /^\d{2}$/ {
      mutate {
        replace => {
          "hrmn" => "00%{hrmn}"
        }
      }
    } else if [hrmn] =~ /^\d{1}$/ {
      mutate {
        replace => {
          "hrmn" => "000%{hrmn}"
        }
      }
    }

    mutate {
      add_field => {
        date => "%{an}/%{mois}/%{jour} %{hrmn}"
      }
    }
    date {
      match => ["date", "yy/MM/dd HHmm"]
    }
  }

  mutate {
    remove_field => ["message","type","an","mois","jour","hrmn","tags","path","@version"]
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch"
    index => "accidents"
    document_id => "%{Num_Acc}"
    doc_as_upsert => true
    action => "update"
    retry_on_conflict => 10
  }

  # stdout {
  #   codec => rubydebug {}
  # }

  file {
    path => "/projets/datasets/accidents/debug.json"
  }
}